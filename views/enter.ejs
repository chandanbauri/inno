<!-- @format -->

<!DOCTYPE html>
<html lang="en">
	<head>
		<title>Enter Information</title>
		<!-- Required meta tags -->
		<meta charset="utf-8" />
		<meta
			name="viewport"
			content="width=device-width, initial-scale=1, shrink-to-fit=no" />

		<!-- Bootstrap CSS -->
		<link
			rel="stylesheet"
			href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css"
			integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T"
			crossorigin="anonymous" />
	</head>
	<body>
		<div class="container">
			<div style="padding-top: 15%"></div>
			<h2>Enter data in any one of the following to reflect on the display</h2>
			<br />
			<form id="op-form">
				<div class="form-group">
					<label for="formGroupExampleInput"><b>Enter Text</b></label>
					<textarea
						class="form-control"
						name="text"
						id="formGroupExampleInput"
						placeholder="Enter input">
					</textarea>
				</div>
				<div class="form-group">
					<label for="formGroupExampleInput2"><b>Enter URL</b></label>
					<input
						type="text"
						class="form-control"
						name="url"
						id="formGroupExampleInput2"
						placeholder="Enter input" />
				</div>
				<div class="form-group">
					<label for="formGroupExampleInput2"><b>Upload Image</b></label>
					<input
						type="file"
						class="form-control-file"
						name="file"
						id="exampleFormControlFile1" />
				</div>
				<span><b>Select Screen</b></span>
				<div class="form-group">
					<input
						id="screen-1"
						type="radio"
						name="screen"
						value="1" />
					<label for="screen-1">Screen 1</label>
					<input
						id="screen-2"
						type="radio"
						name="screen"
						value="2" />
					<label for="screen-2">Screen 2</label>
					<input
						id="screen-3"
						type="radio"
						name="screen"
						value="3" />
					<label for="screen-3">Screen 3</label>
					<input
						id="screen-4"
						type="radio"
						name="screen"
						value="4" />
					<label for="screen-4">SCreen 4</label>
				</div>
				<button
					type="submit"
					class="btn btn-primary"
					>Submit</button
				>
			</form>
		</div>
		<script src="/js/editor/ckeditor/ckeditor.js"></script>
		<script>
			let message_input = document.querySelector('#formGroupExampleInput')
			let url_input = document.querySelector('#formGroupExampleInput2')
			let image_input = document.querySelector('#exampleFormControlFile1')
			let screens = document.getElementsByName('screen')
			let editor = CKEDITOR.replace('formGroupExampleInput')
			editor.on('change', function (evt) {
				// getData() returns CKEditor's HTML content.
				let url_input = document.querySelector('#formGroupExampleInput2')
				let image_input = document.querySelector('#exampleFormControlFile1')

				url_input.value = ''
				image_input.value = ''
				console.log(evt.editor.getData())
				// console.log('Total bytes: ' + evt.editor.getData().length)
			})
			const onChange = (ev) => {
				let el = ev.target
				let el_id = ev.target.id
				let message_input_id = message_input.getAttribute('id')
				let url_input_id = url_input.getAttribute('id')
				let image_input_id = image_input.getAttribute('id')
				console.log(el.value)
				switch (el_id) {
					case message_input_id: {
						url_input.value = ''
						image_input.value = ''
						return
					}
					case url_input_id: {
						message_input.value = ''
						image_input.value = ''
						editor.setData('')
						return
					}
					case image_input_id: {
						url_input.value = ''
						message_input.value = ''
						editor.setData('')
						return
					}
				}
			}
			message_input.addEventListener('input', onChange)
			url_input.addEventListener('input', onChange)
			image_input.addEventListener('input', onChange)

			const form = document.getElementById('op-form')

			form.addEventListener('submit', submitForm)

			function submitForm(e) {
				e.preventDefault()
				let screen = 1
				screens.forEach((el) => {
					if (el.checked) {
						screen = el.value
					}
				})
				let text = document.getElementById('formGroupExampleInput').value
				const url = document.getElementById('formGroupExampleInput2').value
				const files = document.getElementById('exampleFormControlFile1')
				text = editor.getData().toString()
				if (text == '' && url == '' && files.files.length === 0) {
					alert('At most one field needs to filled')
					return
				}
				const formData = new FormData()
				formData.append('text', text)
				formData.append('url', url)
				formData.append('screen', screen)
				for (let i = 0; i < files.files.length; i++) {
					formData.append('files', files.files[i])
				}
				//
				fetch('https://espace.protocol.in/imageview', {
				// fetch('http://localhost:3300/imageview', {
					method: 'POST',
					body: formData,
				})
					.then(async (res) => {
						// alert(JSON.stringify(res.body))
						let json = await res.json()
						alert('Content Uploaded')
					})
					.catch((err) => ('Error occured', err))
			}
		</script>
		<!-- Optional JavaScript -->
		<!-- jQuery first, then Popper.js, then Bootstrap JS -->
		<script
			src="https://code.jquery.com/jquery-3.3.1.slim.min.js"
			integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo"
			crossorigin="anonymous"></script>
		<script
			src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"
			integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1"
			crossorigin="anonymous"></script>
		<script
			src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"
			integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM"
			crossorigin="anonymous"></script>
	</body>
</html>
